/** --------------------------------------------------------
    utils/_functions.scss
    --------------------------------------------------------
    @author Keenan Staffieri
    Utility SASS functions.
    -------------------------------------------------------- */

@function get-colors-map() {

    @if map-has-key($theme-config, 'colors') {
        @return map-get($theme-config, 'colors');
    }

    @warn "'colors' not found in $theme-config";
    @return null;
}


@function get-color-aliases-map() {

    @if map-has-key($theme-config, 'color-aliases') {
        @return map-get($theme-config, 'color-aliases');
    }

    @warn "'color-aliases' not found in $theme-config";
    @return null;
}


@function color($color) {

    $colors: get-colors-map();

    @if map-has-key($colors, $color) {
        @return map-get($colors, $color);
    }

    @warn "Color `#{$color}` not found in $theme-config->colors.";
    @return null;
}


@function color-alias($color) {

    $color-aliases: get-colors-aliases-map();

    @if map-has-key($color-aliases, $color) {

        $found-color: map-get($color-aliases, $color);

        @if type-of($found-color) == string {
            @return call('color', $found-color);
        }
        @else if type-of($found-color) == color {
            @return $found-color;
        }
    }

    @warn "Color `#{$color}` not found in $theme-config->color-aliases.";
    @return null;
}


// Return color from 'color-aliases' or 'colors'
@function theme-color($wanted-color) {

    // Get 'color-aliases' and 'colors'
    $color-aliases: get-color-aliases-map();
    $colors:        get-colors-map();

    // First, check if colors can be found in 'color-aliases'
    @if map-has-key($color-aliases, $wanted-color) {

        $found-color: map-get($color-aliases, $wanted-color);

        @if type-of($found-color) == string {
            @return call('color', $found-color);
        }
        @else if type-of($found-color) == color {
            @return $found-color;
        }
    }
    // Color not found in 'color-aliases', check if the color is in 'colors'
    @else if map-has-key($colors, $wanted-color) {
        @return map-get($colors, $wanted-color);
    }

    @warn "Color '#{$wanted-color}' not found in 'color-aliases' or 'colors'";
    @return null;
}


@function page-background() {

    @if map-has-key($theme-config, 'page-background') {
        @return  map-get($theme-config, 'page-background');
    }

    @warn "'page-background' not found in $theme-config";
    @return null;
}


@function theme-property($category, $property) {

    // Get theme component
    $theme-property: map-get($theme-config, $category);

    // Special logic required for color properties
    // Both 'colors' and 'theme-colors' need to be checked
    @if $property == 'background-color' or $property == 'nav-item-color' or $property == 'nav-item-hover-color' or $property == 'nav-item-color--active' {

        // Determine wanted color from theme component
        $wanted-color: map-get($theme-property, $property);

        @if type-of($wanted-color) == string {
            // Get color from 'color-aliases' or 'colors'
            @return theme-color($wanted-color);
        }
        @else if type-of($wanted-color) == color {
            // Raw color or hex value was specified
            @return $wanted-color;
        }
    }
    // Return wanted theme property
    @else {
        @return map-get($theme-property, $property);
    }
}


@function theme-category($category) {

    @if map-has-key($theme-config, $category) {
        @return map-get($theme-config, $category);
    }

    @warn "Category `#{$category}` not found in $theme-config.";
    @return null;
}


@function theme-font-family($font) {

    @if map-has-key($theme-config, 'fonts') {

        $fonts: map-get($theme-config, 'fonts');

        @if map-get($fonts, $font) {
            @return unquote(map-get($fonts, $font));
        }

        @warn "Font `#{$font}` not found in $theme-config->fonts.";
        @return null;
    }

    @warn "Category 'fonts' not found in $theme-config";
    @return null;
}


@function z($z) {

    @if map-has-key($z-layers, $z) {
       @return map-get($z-layers, $z);
    }

    @warn "Unknown `#{$z}` in $z-layers.";
    @return null;
}
