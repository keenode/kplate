/** --------------------------------------------------------
    base/_typography.scss
    --------------------------------------------------------
    @author Keenan Staffieri
    Typography styles.
    -------------------------------------------------------- */

// Typography
// 
// Styleguide 1.


// Headings
//
// Page headers.
//
// .main-heading - Main heading.
//
// Markup:
// <h1 class="{$modifiers}">Hello, World</h1>
//
// Styleguide 1.1

/**
    B A S E
    Base typography settings applied to body.
*/

$base-typography: theme-category('typography');

body {
    @include populate-properties($base-typography);
}



/**
    H E A D I N G S
    h1, h2, h3, h4, h5, h6
    {h1-h6}.{variations_class}
*/

// Get 'headings' map from 'typography'
$headings: theme-property('typography', 'headings');

// Get total number of headings
$num-headings: length($headings);

// Generate heading selectors
@for $i from 1 through $num-headings {

    $heading:  nth($headings, $i);
    $selector: map-get($heading, 'selector');

    #{$selector} {
        // Include heading properties
        @include populate-properties($heading);

        // Generate media queries
        @include responsive-styles($heading);
    }
}



/**
    P A R A G R A P H S
    p.{variations_class}
*/

$paragraphs: theme-property('typography', 'paragraphs');

p {
    // Include base paragraph properties
    @include populate-properties($paragraphs);

    // Generate media queries
    @include responsive-styles($paragraphs);

    // Get paragraph variations
    $paragraph-variations: map-get($paragraphs, 'variations');

    // Get total number of paragraph variations
    $num-paragraph-variations: 1;

    @if type-of($paragraph-variations) == list {
        $num-paragraph-variations: length($paragraph-variations);
    }

    // Generate paragraph variations
    @for $i from 1 through $num-paragraph-variations {

        $paragraph: $paragraph-variations;

        @if type-of($paragraph-variations) == list {
            $paragraph: nth($paragraph-variations, $i);
        }

        $class-name: map-get($paragraph, 'class-name');

        &.#{$class-name} {
            // Include paragraph variation properties
            @include populate-properties($paragraph);

            // Generate media queries
            @include responsive-styles($paragraph);
        }
    }
}



/**
    A N C H O R S
    a.{variations_class}
*/

@mixin populate-anchor-states($anchor) {

    // :hover
    @if map-has-key($anchor, 'hover-styles') {
        &:hover {
            $hover-properties: map-get($anchor, 'hover-styles');
            @include populate-properties($hover-properties);
        }
    }
    // :active
    @if map-has-key($anchor, 'active-styles') {
        &:active {
            $active-properties: map-get($anchor, 'active-styles');
            @include populate-properties($active-properties);
        }
    }
    // :visited
    @if map-has-key($anchor, 'visited-styles') {
        &:visited {
            $visited-properties: map-get($anchor, 'visited-styles');
            @include populate-properties($visited-properties);
        }
    }
}

$anchors: theme-property('typography', 'anchors');

a {
    // Include base anchor properties
    @include populate-properties($anchors);

    // Add properties for anchor states (:hover, :active, :visited)
    @include populate-anchor-states($anchors);

    // Get anchor variation
    $anchor-variations: map-get($anchors, 'variations');

    // Get total number of anchor variations
    $num-anchor-variations: 1;

    @if type-of($anchor-variations) == list {
        $num-anchor-variations: length($anchor-variations);
    }

    // Generate anchor variations
    @for $i from 1 through $num-anchor-variations {

        $anchor: $anchor-variations;

        @if type-of($anchor-variations) == list {
            $anchor: nth($anchor-variations, $i);
        }

        $class-name: map-get($anchor, 'class-name');

        &.#{$class-name} {
            // Include anchor variation properties
            @include populate-properties($anchor);

            // Add properties for anchor states (:hover, :active, :visited)
            @include populate-anchor-states($anchor);
        }
    }
}
